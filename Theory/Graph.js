//그래프
//정점과 정점 사이를 연결하는 간선으로 이루어진 비선형 자료구조
//정점 집합과 간선 집합으로 표현할 수 있다
//지하철역, 인물관계도, 페이지링크 가 그 예시
//정점은 여러개의 간선을 가질 수 있다
//크게 방향 그래프, 무방향 그래프로 나눌 수 있다
//간선은 가중치를 가질 수 있다
//사이클이 발생할 수 있다

//무방향 그래프
//간선으로 이어진 정점끼리는 양방향으로 이동이 가능하다
//(A,B) , (B,A) 는 같은 간선으로 취급

//방향 그래프
//간선에 방향성이 존재하는 그래프
//양방향으로 갈 수 있더라도 (A,B) , (B,A) 는 다른 간선으로 취급

//연결 그래프
//모든 정점이 서로 이동 가능한 상태인 그래프

//비연결 그래프
//특정 정점쌍 사이에 간선이 존재하지 않는 그래프

//완전 그래프
//모든 정점끼리 서로 연결된 상태인 그래프

//그래프의 구현 방법
//인접 행렬, 인접 리스트 2가지 방식으로 그래프 표현 가능

//Array
const graph = Array.from(Array(5), () => Array(5).fill(false));

graph[0][1] = true;
graph[0][3] = true;
graph[1][2] = true;
graph[2][0] = true;
graph[3][2] = true;
graph[4][0] = true;

//List
const graph = Array.from(Array(5), () => []);
graph[0].push(1); // 0 -> 1
graph[0].push(3); // 0 -> 3
graph[1].push(2); // 1 -> 2
graph[2].push(0); // 2 -> 0
graph[3].push(2); // 3 -> 2
graph[4].push(0); // 4 -> 0
